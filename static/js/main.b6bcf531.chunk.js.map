{"version":3,"sources":["components/Post.js","Firebase.js","components/ImageUpload.js","App.js","index.js"],"names":["Post","username","imgUrl","caption","className","Avatar","alt","src","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","ImageUpload","useState","setCaption","image","setImage","uploadProgress","setProgress","value","max","type","placeholder","onChange","e","target","files","Button","onClick","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","collection","add","timestamp","FieldValue","serverTimestamp","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","React","modalStyle","posts","setPosts","open","setOpen","setUsername","password","setPassword","email","setEmail","user","setUser","openSignIn","setOpenSignIn","useEffect","unsubscribe","onAuthStateChanged","authUser","onSnapshot","docs","map","doc","id","post","data","Modal","onClose","style","Input","preventDefault","createUserWithEmailAndPassword","updateProfile","displayName","catch","signInWithEmailAndPassword","err","signOut","key","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6bcf531.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./post.css\"\r\nimport Avatar from '@material-ui/core/Avatar'\r\nfunction Post({username,imgUrl,caption}) {\r\n    return (\r\n        <div className=\"post\">\r\n\r\n            <div className=\"post_header\">\r\n\r\n\r\n            <Avatar \r\n            className = \"post_avatar\"\r\n            alt={username}\r\n            src = \"/static/images/avatar/1.jpg\"/>\r\n            <h3>{username}</h3>\r\n            </div>\r\n            <img \r\n            className=\"post_image\"\r\n            src ={imgUrl}\r\n            />\r\n\r\n            <h4 className=\"post_text\"><strong>{username}:</strong> {caption}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n   \r\n        apiKey: \"AIzaSyAJWjmW6wAeVdWmshGhAS847ywfqIjN27g\",\r\n        authDomain: \"notify-d67f5.firebaseapp.com\",\r\n        databaseURL: \"https://notify-d67f5.firebaseio.com\",\r\n        projectId: \"notify-d67f5\",\r\n        storageBucket: \"notify-d67f5.appspot.com\",\r\n        messagingSenderId: \"447304067357\",\r\n        appId: \"1:447304067357:web:e19ed9d241ce335d6e59f4\"\r\n      \r\n\r\n})\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\n\r\nexport {db,auth,storage}","import React,{useState} from 'react'\r\nimport { Button,Input } from '@material-ui/core';\r\nimport {storage,db} from '../Firebase'\r\nimport firebase from 'firebase'\r\nimport \"./imageupload.css\"\r\nfunction ImageUpload({username}) {\r\n    const [caption,setCaption] = useState(\"\");\r\n    const [image,setImage] = useState(null);\r\n    const [uploadProgress,setProgress] = useState(0);\r\n\r\n    \r\n     const handleChange=(e)=>{\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const handleUpload = ()=>{\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot)=>{\r\n                //progress logic\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred/snapshot.totalBytes) *100\r\n                );\r\n                setProgress(progress)\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            ()=>{\r\n                //  complete function\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url=>{\r\n                        db.collection(\"posts\").add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            caption:caption,\r\n                            imgUrl:url,\r\n                            username:username\r\n                        });\r\n\r\n                        setProgress(0);\r\n                        setCaption(\"\");\r\n                        setImage(null);\r\n                });\r\n            }\r\n        ) \r\n    }\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress className = \"imageupload_progress\"value={uploadProgress} max= \"100\"/>\r\n           <input type=\"text\" placeholder=\"Enter a caption\" onChange = {e=>setCaption(e.target.value)} value={caption}/>\r\n           <input type = \"file\" onChange={handleChange}/>\r\n           <Button onClick = {handleUpload}>\r\n               Upload\r\n           </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport \"./App.css\";\nimport Post from \"./components/Post\";\nimport { db, auth } from \"./Firebase\";\nimport { Button, Input } from \"@material-ui/core\";\nimport ImageUpload from \"./components/ImageUpload\";\nimport InstagramEmbed from \"react-instagram-embed\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: \"50vw\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [openSignIn, setOpenSignIn] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        setUser(authUser);\n      }\n    });\n\n    return () => {\n      //preform some cleanup option\n\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  useEffect(() => {\n    db.collection(\"posts\").onSnapshot((snapshot) => {\n      setPosts(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          post: doc.data(),\n        }))\n      );\n    });\n  }, []);\n\n  const Signup = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => alert(error.message));\n      setOpen(false)\n  };\n\n  const SignIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => alert(err.message));\n\n    setOpenSignIn(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_signup\">\n            <center>\n              <img\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"instagram logo\"\n                className=\"app_headerImage\"\n              />\n            </center>\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button onClick={Signup}>Signup</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_signup\">\n            <center>\n              <img\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"instagram logo\"\n                className=\"app_headerImage\"\n              />\n            </center>\n\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button onClick={SignIn}>Login</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app_header\">\n        <img\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt=\"instagram logo\"\n          className=\"app_headerImage\"\n        />\n\n        {user ? (\n          <Button onClick={() => auth.signOut()}>Logout</Button>\n        ) : (\n          <div className=\"login_container\">\n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign up</Button>\n          </div>\n        )}\n      </div>\n\n      {user?.displayName ? `Connected as ${user.displayName}` : null}\n\n      <div className=\"app_posts\">\n        <div className=\"apppost_left\">\n          {posts.map(({ id, post }) => (\n            <Post\n              key={id}\n              username={post.username}\n              imgUrl={post.imgUrl}\n              caption={post.caption}\n            />\n          ))}\n        </div>\n\n        <div className=\"apppost_right\">\n          Wesite created By:\n          <InstagramEmbed\n            url=\"https://www.instagram.com/p/B4H3-i3nQY5/?utm_source=ig_web_copy_link\"\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName=\"div\"\n            protocol=\"\"\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>\n\n      {user?.displayName ? <ImageUpload/> :null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}