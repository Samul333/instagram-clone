{"version":3,"sources":["Firebase.js","components/Post.js","components/ImageUpload.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","storage","Post","username","imgUrl","caption","postId","user","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","displayName","type","placeholder","value","onChange","e","target","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","console","log","ImageUpload","setCaption","image","setImage","uploadProgress","setProgress","max","files","Button","ref","name","put","on","progress","Math","round","bytesTransferred","totalBytes","error","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","React","modalStyle","posts","setPosts","open","setOpen","setUsername","password","setPassword","email","setEmail","setUser","openSignIn","setOpenSignIn","onAuthStateChanged","authUser","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","err","signOut","key","maxWidth","hideCaption","containerTagName","protocol","injectScript","onLoading","onSuccess","onAfterRender","onFailure","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0f987b8.chunk.js","sourcesContent":["import firebase from 'firebase'\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n   \r\n        apiKey: \"AIzaSyAJWjmW6wAeVdWmshGhAS847ywfqIjN27g\",\r\n        authDomain: \"notify-d67f5.firebaseapp.com\",\r\n        databaseURL: \"https://notify-d67f5.firebaseio.com\",\r\n        projectId: \"notify-d67f5\",\r\n        storageBucket: \"notify-d67f5.appspot.com\",\r\n        messagingSenderId: \"447304067357\",\r\n        appId: \"1:447304067357:web:e19ed9d241ce335d6e59f4\"\r\n      \r\n\r\n})\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\n\r\nexport {db,auth,storage}","import React, { useState, useEffect } from \"react\";\r\nimport \"./post.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from \"../Firebase\";\r\nimport firebase from 'firebase'\r\nfunction Post({ username, imgUrl, caption, postId,user }) {\r\n  const [comments, setComments] = useState([]);\r\n  const [comment,setComment] = useState(\"\");\r\n    \r\n  useEffect(() => {\r\n    let unsubscribe;\r\n    if (postId) {\r\n      unsubscribe = db\r\n        .collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .orderBy('timestamp', 'desc')\r\n        .onSnapshot((snapshot) => {\r\n          setComments(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const postComment = (e)=>{\r\n    e.preventDefault();\r\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n        text:comment,\r\n        username:user.displayName,\r\n        timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n    });\r\n\r\n    setComment('');\r\n  }\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"post_header\">\r\n        <Avatar\r\n          className=\"post_avatar\"\r\n          alt={username}\r\n          src=\"/static/images/avatar/1.jpg\"\r\n        />\r\n        <h3>{username}</h3>\r\n      </div>\r\n      <img className=\"post_image\" src={imgUrl} />\r\n      <h4 className=\"post_text\">\r\n        <strong>{username}:</strong> {caption}\r\n      </h4>\r\n       \r\n       <div className = \"post_comments\">\r\n                    {comments.map((comment)=>(\r\n                            <p>\r\n\r\n                    <b>{comment.username}: </b>{comment.text}\r\n\r\n                            </p>\r\n\r\n\r\n                ))}\r\n\r\n\r\n       </div>\r\n       \r\n       \r\n       {user.displayName ?  <form className = \"post_commentbox\">\r\n            <input \r\n            className=\"post_input\"\r\n            type=\"text\"\r\n            placeholder=\"Add a comment..\"\r\n            value={comment}\r\n            onChange={(e)=>setComment(e.target.value)}\r\n            />\r\n            <button\r\n            disabled={!comment}\r\n            type=\"submit\"\r\n            onClick ={postComment}\r\n            className = \"post_button\"\r\n                    >Post </button>\r\n\r\n        </form> :console.log('false')}\r\n       \r\n       \r\n       \r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","import React,{useState} from 'react'\r\nimport { Button,Input } from '@material-ui/core';\r\nimport {storage,db} from '../Firebase'\r\nimport firebase from 'firebase'\r\nimport \"./imageupload.css\"\r\nfunction ImageUpload({username}) {\r\n    const [caption,setCaption] = useState(\"\");\r\n    const [image,setImage] = useState(null);\r\n    const [uploadProgress,setProgress] = useState(0);\r\n\r\n    \r\n     const handleChange=(e)=>{\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0])\r\n        }\r\n    };\r\n\r\n    const handleUpload = ()=>{\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot)=>{\r\n                //progress logic\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred/snapshot.totalBytes) *100\r\n                );\r\n                setProgress(progress)\r\n            },\r\n            (error)=>{\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            ()=>{\r\n                //  complete function\r\n                storage\r\n                .ref(\"images\")\r\n                .child(image.name)\r\n                .getDownloadURL()\r\n                .then(url=>{\r\n                        db.collection(\"posts\").add({\r\n                            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                            caption:caption,\r\n                            imgUrl:url,\r\n                            username:username\r\n                        });\r\n\r\n                        setProgress(0);\r\n                        setCaption(\"\");\r\n                        setImage(null);\r\n                });\r\n            }\r\n        ) \r\n    }\r\n    return (\r\n        <div className=\"imageupload\">\r\n            <progress className = \"imageupload_progress\"value={uploadProgress} max= \"100\"/>\r\n           <input type=\"text\" placeholder=\"Enter a caption\" onChange = {e=>setCaption(e.target.value)} value={caption}/>\r\n           <input type = \"file\" onChange={handleChange}/>\r\n           <Button onClick = {handleUpload}>\r\n               Upload\r\n           </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport \"./App.css\";\nimport Post from \"./components/Post\";\nimport { db, auth } from \"./Firebase\";\nimport { Button, Input } from \"@material-ui/core\";\nimport ImageUpload from \"./components/ImageUpload\";\nimport InstagramEmbed from \"react-instagram-embed\";\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: \"50vw\",\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [openSignIn, setOpenSignIn] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        console.log(authUser);\n        setUser(authUser);\n      } else {\n        setUser(authUser);\n      }\n    });\n\n    return () => {\n      //preform some cleanup option\n\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  useEffect(() => {\n    db.collection(\"posts\").onSnapshot((snapshot) => {\n      setPosts(\n        snapshot.docs.map((doc) => ({\n          id: doc.id,\n          post: doc.data(),\n        }))\n      );\n    });\n  }, []);\n\n  const Signup = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => alert(error.message));\n      setOpen(false)\n  };\n\n  const SignIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((err) => alert(err.message));\n\n    setOpenSignIn(false);\n  };\n\n  return (\n    <div className=\"app\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_signup\">\n            <center>\n              <img\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"instagram logo\"\n                className=\"app_headerImage\"\n              />\n            </center>\n            <Input\n              type=\"text\"\n              placeholder=\"username\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button onClick={Signup}>Signup</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_signup\">\n            <center>\n              <img\n                src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n                alt=\"instagram logo\"\n                className=\"app_headerImage\"\n              />\n            </center>\n\n            <Input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              type=\"password\"\n              placeholder=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n\n            <Button onClick={SignIn}>Login</Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app_header\">\n        <img\n          src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n          alt=\"instagram logo\"\n          className=\"app_headerImage\"\n        />\n\n        {user ? (\n          <Button onClick={() => auth.signOut()}>Logout</Button>\n        ) : (\n          <div className=\"login_container\">\n            <Button onClick={() => setOpenSignIn(true)}>Sign In</Button>\n            <Button onClick={() => setOpen(true)}>Sign up</Button>\n          </div>\n        )}\n      </div>\n\n      {user?.displayName ? `Connected as ${user.displayName}` : null}\n\n      <div className=\"app_posts\">\n        <div className=\"apppost_left\">\n          {posts.map(({ id, post }) => (\n            <Post\n              key={id}\n              postId = {id}\n              username={post.username}\n              imgUrl={post.imgUrl}\n              caption={post.caption}\n              user={user}\n            />\n          ))}\n        </div>\n\n        <div className=\"apppost_right\">\n          Wesite created By:\n          <InstagramEmbed\n            url=\"https://www.instagram.com/p/B4H3-i3nQY5/?utm_source=ig_web_copy_link\"\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName=\"div\"\n            protocol=\"\"\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n        </div>\n      </div>\n\n      {user?.displayName ? <ImageUpload/> :null}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}